{"version":3,"sources":["webpack:///./Scripts/home/home-page.tsx","webpack:///./Scripts/home/index.scss","webpack:///./Scripts/home/components/app.component.tsx","webpack:///./Scripts/home/components/add-contact-form.component.tsx","webpack:///./Scripts/home/components/contact-list.component.tsx","webpack:///./Scripts/home/components/contact-list-item.component.tsx"],"names":[],"mappings":"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","file":"home.js","sourcesContent":["import * as  React from 'react';\r\nimport * as  ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { Alerter } from \"../utils/alerter\";\r\n// Import the application modules.\r\nimport { AppComponent } from \"./components/app.component\";\r\n\r\nconst ROOT = document.querySelector(\".container\");\r\n// To bootstrap the application, all we're going to do is render the root component \r\n// on the main page.\r\nReactDOM.render(<AppComponent />, ROOT);\r\n\n\n\n// WEBPACK FOOTER //\n// ./Scripts/home/home-page.tsx","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Scripts/home/index.scss\n// module id = 31\n// module chunks = 1","\r\n// Import the core React modules.\r\nimport React = require( \"react\" );\r\nimport _ = require( \"lodash\" );\r\n\r\n// Import the application modules.\r\nimport { AddContactFormComponent } from \"./add-contact-form.component\";\r\nimport { Contact } from \"./interfaces\";\r\nimport { ContactListComponent } from \"./contact-list.component\";\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n\tcontacts: Contact[];\r\n}\r\n\r\nexport class AppComponent extends React.Component<Props, State> {\r\n\r\n\t// I initialize the app component.\r\n    constructor(props: Props) {\r\n\r\n        super(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcontacts: [\r\n\t\t\t\t{ id: 1, name: \"Kim\" },\r\n\t\t\t\t{ id: 2, name: \"Sarah\" },\r\n\t\t\t\t{ id: 3, name: \"Joanna\" },\r\n\t\t\t\t{ id: 4, name: \"Libby\" }\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t}\r\n\r\n\r\n\t// ---\r\n\t// PUBLIC METHODS.\r\n\t// ---\r\n\t\r\n\r\n\t// I render the component.\r\n\tpublic render() : JSX.Element {\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tYou Have { this.state.contacts.length || \"No\" } Contacts\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<ContactListComponent\r\n\t\t\t\t\tcontacts={ this.state.contacts }\r\n\t\t\t\t\tonDelete={ this.handleDelete }>\r\n\t\t\t\t</ContactListComponent>\r\n\r\n\t\t\t\t<AddContactFormComponent onSubmit={ this.handleAdd } />\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\t// ---\r\n\t// PRIVATE METHODS.\r\n\t// ---\r\n\r\n\r\n\t//// I get the next available ID from the given collection of contacts.\r\n\t//private getNextID( contacts: Contact[] ) : number {\r\n\r\n\t//\tif ( contacts.length ) {\r\n\r\n\t//\t\t//return( _.maxBy( contacts, \"id\" ).id + 1 );\r\n\r\n\t//\t} else {\r\n\r\n\t//\t\treturn( 1 );\r\n\r\n\t//\t}\r\n\r\n\t//}\r\n\r\n\r\n\t// I handle name emitted from the form component, adding a new contact.\r\n\t// --\r\n\t// CAUTION: Using an instance-property to define the function so that we don't lose\r\n\t// the \"this\" context when the method reference is passed into the React element.\r\n\tprivate handleAdd = ( name: string ) : void => {\r\n\r\n\t\t//// NOTE: Since the next state is based on the previous state, we need to use the\r\n\t\t//// callback-style invocation so that we can handle asynchronous state updates.\r\n\t\t//this.setState(\r\n\t\t//\t( state: State, props: Props ) : Partial<State> => {\r\n\r\n\t\t//\t\treturn({\r\n\t\t//\t\t\tcontacts: [\r\n\t\t//\t\t\t\t...state.contacts, \r\n\t\t//\t\t\t\t{\r\n\t\t//\t\t\t\t\tid: this.getNextID( state.contacts ),\r\n\t\t//\t\t\t\t\tname: name\r\n\t\t//\t\t\t\t}\r\n\t\t//\t\t\t]\r\n\t\t//\t\t});\r\n\r\n\t\t//\t}\r\n\t\t//);\r\n\r\n\t}\r\n\r\n\r\n\t// I handle the delete event emitted from the contact list, removing a contact.\r\n\t// --\r\n\t// CAUTION: Using an instance-property to define the function so that we don't lose\r\n\t// the \"this\" context when the method reference is passed into the React element.\r\n\tprivate handleDelete = ( contact: Contact ) : void => {\r\n\t\t\r\n\t\t//// NOTE: Since the next state is based on the previous state, we need to use the\r\n\t\t//// callback-style invocation so that we can handle asynchronous state updates.\r\n\t\t//this.setState(\r\n\t\t//\t( state: State, props: Props ) : Partial<State> => {\r\n\r\n\t\t//\t\treturn({\r\n\t\t//\t\t\tcontacts: _.without( state.contacts, contact )\r\n\t\t//\t\t});\r\n\r\n\t\t//\t}\r\n\t\t//);\r\n\t\t\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Scripts/home/components/app.component.tsx","\r\n// Import the core React modules.\r\nimport React = require( \"react\" );\r\n\r\nexport interface OnSubmit {\r\n\t( name: string ) : void;\r\n}\r\n\r\ninterface Props {\r\n\tonSubmit: OnSubmit;\r\n}\r\n\r\ninterface State {\r\n\tname: string;\r\n}\r\n\r\nexport class AddContactFormComponent extends React.Component<Props, State> {\r\n\r\n\tprivate input: HTMLInputElement;\r\n\r\n\r\n\t// I initialize the add contact form component.\r\n\tconstructor( props: Props ) {\r\n\r\n\t\tsuper( props );\r\n\r\n\t\tthis.state = {\r\n\t\t\tname: \"\"\r\n\t\t};\r\n\r\n\t\t//this.input = null;\r\n\r\n\t}\r\n\r\n\r\n\t// ---\r\n\t// PUBLIC METHODS.\r\n\t// ---\r\n\r\n\r\n\t// I get called once the component has been mounted on the DOM (and the Element\r\n\t// references have been made available).\r\n\tpublic componentDidMount() : void {\r\n\r\n\t\tthis.input.focus();\r\n\r\n\t}\r\n\r\n\r\n\t// I render the component.\r\n\tpublic render() : JSX.Element {\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"add-contact\">\r\n\r\n\t\t\t\t<h3 className=\"add-contact__title\">\r\n\t\t\t\t\tAdd New Contact\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t<form onSubmit={ this.handleSubmit } className=\"add-contact__form\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tref={ this.handleInputRef }\r\n\t\t\t\t\t\tvalue={ this.state.name }\r\n\t\t\t\t\t\tonChange={ this.handleValue }\r\n\t\t\t\t\t\tplaceholder=\"Jane Doe...\"\r\n\t\t\t\t\t\tclassName=\"add-contact__input\">\r\n\t\t\t\t\t</input>\r\n\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"add-contact__button\"\r\n\t\t\t\t\t\tdisabled={ ! this.state.name }>\r\n\t\t\t\t\t\tAdd Contact\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\t// ---\r\n\t// PRIVATE METHODS.\r\n\t// ---\r\n\r\n\r\n\t// I handle the delete click.\r\n\t// --\r\n\t// CAUTION: Using an instance-property to define the function so that we don't lose \r\n\t// the \"this\" context when the method reference is passed into the React element.\r\n\tprivate handleSubmit = ( event: React.FormEvent<HTMLFormElement> ) : void => {\r\n\r\n\t\t// Stop the native form submission behavior.\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif ( this.state.name ) {\r\n\r\n\t\t\tthis.props.onSubmit( this.state.name );\r\n\t\t\tthis.setState({\r\n\t\t\t\tname: \"\"\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// I handle the exposure of the input element on the DOM.\r\n\t// --\r\n\t// CAUTION: Using an instance-property to define the function so that we don't lose \r\n\t// the \"this\" context when the method reference is passed into the React element.\r\n\tprivate handleInputRef = ( element: HTMLInputElement ) : void => {\r\n\r\n\t\tthis.input = element;\r\n\r\n\t}\r\n\r\n\r\n\t// I handle the one-way data flow change to the form input.\r\n\tprivate handleValue = ( event: React.FormEvent<HTMLInputElement> ) : void => {\r\n\r\n\t\t// CAUTION: I need to cast the React.FormEvent<HTMLInputElement> event type to\r\n\t\t// be an ANY since the native EventTarget interface doesn't appear to support \r\n\t\t// \"value\" (on target) at this time. So, by casting to ANY, I am essentially \r\n\t\t// side-stepping type-safety in order to access the input value.\r\n\t\tthis.setState({\r\n\t\t\tname: ( event as any ).target.value\r\n\t\t})\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Scripts/home/components/add-contact-form.component.tsx","\r\n// Import the core React modules.\r\n// --\r\n// CAUTION: DO NOT REMOVE - Even though this doesn't appear to be referenced, it will be\r\n// referenced in the transpiled code (which creates React.createElement() expressions).\r\nimport React = require( \"react\" );\r\n\r\n// Import the application modules.\r\nimport { Contact } from \"./interfaces\";\r\nimport { ContactListItemComponent } from \"./contact-list-item.component\";\r\nimport { OnDelete } from \"./contact-list-item.component\";\r\n\r\n// Since the calling context may need to know the callback interface, let's re-export the\r\n// OnDelete interface (it's not truly needed for this demo, but I think this may make \r\n// sense as a general rule).\r\nexport { OnDelete };\r\n\r\ninterface Props {\r\n\tcontacts: Contact[];\r\n\tonDelete: OnDelete;\r\n}\r\n\r\n// NOTE: We are using a Function instead of a Class here because this is a stateless \r\n// component that doesn't need to expose any additional methods. As such, we can provide\r\n// what is essential just the render() method. The props are still type-checked against\r\n// the Props {} interface.\r\nexport function ContactListComponent( props: Props ) : JSX.Element {\r\n\r\n\tvar contactListItemNodes = props.contacts.map(\r\n\t\t( contact: Contact ) : JSX.Element => {\r\n\r\n\t\t\treturn(\r\n\t\t\t\t<ContactListItemComponent\r\n\t\t\t\t\tkey={ contact.id } \r\n\t\t\t\t\tcontact={ contact } \r\n\t\t\t\t\tonDelete={ props.onDelete }>\r\n\t\t\t\t</ContactListItemComponent>\r\n\t\t\t);\r\n\r\n\t\t}\r\n\t);\r\n\r\n\treturn(\r\n\t\t<div className=\"contact-list\">\r\n\t\t\t{ contactListItemNodes }\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Scripts/home/components/contact-list.component.tsx","\r\n// Import the core React modules.\r\nimport React = require( \"react\" );\r\n\r\n// Import the application modules.\r\nimport { Contact } from \"./interfaces\";\r\n\r\nexport interface OnDelete {\r\n\t( contact: Contact ) : void;\r\n}\r\n\r\ninterface Props {\r\n\tcontact: Contact;\r\n\tonDelete: OnDelete;\r\n}\r\n\r\ninterface State {}\r\n\r\nexport class ContactListItemComponent extends React.Component<Props, State> {\r\n\r\n\t// ---\r\n\t// PUBLIC METHODS.\r\n\t// ---\r\n\r\n\r\n\t// I render the component.\r\n\tpublic render() : JSX.Element {\r\n\r\n\t\treturn(\r\n\t\t\t<div title={ `Contact ID ${ this.props.contact.id }` } className=\"contact-list__item\">\r\n\t\t\t\t<div className=\"contact-list__name\">\r\n\t\t\t\t\t{ this.props.contact.name }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"contact-list__actions\">\r\n\t\t\t\t\t<a onClick={ this.handleClick } className=\"contact-list__action\">Delete</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\t// ---\r\n\t// PRIVATE METHODS.\r\n\t// ---\r\n\r\n\r\n\t// I handle the delete click.\r\n\t// --\r\n\t// CAUTION: Using an instance-property to define the function so that we don't lose \r\n\t// the \"this\" context when the method reference is passed into the React element.\r\n\tprivate handleClick = ( event: React.MouseEvent<HTMLAnchorElement> ) : void => {\r\n\r\n\t\tthis.props.onDelete( this.props.contact );\r\n\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./Scripts/home/components/contact-list-item.component.tsx"],"sourceRoot":""}